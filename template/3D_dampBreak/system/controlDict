/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |				
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9                                   	
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


application     interFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         8;

deltaT          0.0001;

writeControl    adjustableRunTime;

writeInterval   0.02;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   8;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           1.0;
maxAlphaCo      0.5;
maxDeltaT       0.01;

// ************************************************************************* //

functions
{

minmaxdomain_scalar
{
    type            volFieldValue;
    libs            ("libfieldFunctionObjects.so");

    enabled 	    true; 	//true or false
    log             true;	//write to screen
    
    //writeControl    writeTime;
    writeControl    timeStep;
    writeInterval   1;

    writeFields     false;	//write solution to field value - Not needed when only reporting value to screen

    writeLocation   true;	//write location in the output file

    //mode component;

    regionType      all;

    operation       none;

    fields
    (
        p
	p_rgh
        alpha.water
	k 
	epsilon	
    );
}

minmaxdomain_vector
{
    type            volFieldValue;
    libs            ("libfieldFunctionObjects.so");

    enabled 	    true; 	//true or false
    log             true;	//write to screen
    
    //writeControl    writeTime;
    writeControl    timeStep;
    writeInterval   1;

    writeFields     false;	//write solution to field value - Not needed when only reporting value to screen

    writeLocation   true;	//write location in the output file

    //mode component;

    regionType      all;

    operation       none;

    fields
    (
        U
    );
}

mindomain_scalar
{
    $minmaxdomain_scalar
    operation       min;
}

mindomain_vector
{
    $minmaxdomain_vector
    operation       minMag;
}

maxdomain_scalar
{
    $minmaxdomain_scalar
    operation       max;
}

maxdomain_vector
{
    $minmaxdomain_vector
    operation       maxMag;
}

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
water_in_domain
{
    type            volFieldValue;
    functionObjectLibs ("libfieldFunctionObjects.so");

    enabled         true;
    log             true;

    //writeControl    writeTime;
    writeControl   timeStep;
    writeInterval  1;

    writeFields     false;
    writeLocation   false;	

    regionType      all;

    operation       volIntegrate;
    fields
    (
        alpha.water
    );
}

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
probes1
{
    type probes;
    functionObjectLibs ("libsampling.so");
    //dictionary probesDict;
    probeLocations
    (
	(0.82450002 0 0.021)
	(0.82450002 0 0.061)
	(0.82450002 0 0.101)
	(0.82450002 0 0.141)
	(0.8035 0 0.161)
	(0.7635 0 0.161)
	(0.7235 0 0.161)
	(0.6835 0 0.161)
    );

    fields
    (
	p p_rgh
    );

    writeControl       timeStep;
    writeInterval      1;
}
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
    yplus
    {
    	type yPlus;
    	functionObjectLibs ("libfieldFunctionObjects.so");
    	enabled true;
        writeControl outputTime;
    }
///////////////////////////////////////////////////////////////////////////

};
